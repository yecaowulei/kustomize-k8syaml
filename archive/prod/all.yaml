apiVersion: v1
data:
  NACOS_PASSWORD: prod-xxxx
  NACOS_SERVICE_NAMESPACE: namespace-prod
  NACOS_USERNAME: aaaa
  testa: a
  testb: b
kind: ConfigMap
metadata:
  name: common-env-jar
  namespace: namespace-prod
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: go-testa
  name: go-testa
  namespace: namespace-prod
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: go-testa
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: go-testa
    spec:
      containers:
      - env:
        - name: APP_SERVICE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: APP_SERVICE_PORT
          value: "8080"
        envFrom:
        - configMapRef:
            name: go-testa
        image: xxxx/test/go-testa:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 10
        name: go-testa
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          limits:
            cpu: "2"
            memory: 2Gi
          requests:
            cpu: 100m
            memory: 1Gi
        startupProbe:
          failureThreshold: 100
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 3
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 300
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: go-testb
  name: go-testb
  namespace: namespace-prod
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: go-testb
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: go-testb
    spec:
      containers:
      - env:
        - name: APP_SERVICE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: APP_SERVICE_PORT
          value: "8080"
        envFrom:
        - configMapRef:
            name: go-testb
        image: xxxx/test/go-testb:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 10
        name: go-testb
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          limits:
            cpu: "2"
            memory: 2Gi
          requests:
            cpu: 100m
            memory: 1Gi
        startupProbe:
          failureThreshold: 100
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 3
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 300
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: java-testa
  name: java-testa
  namespace: namespace-prod
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: java-testa
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: java-testa
    spec:
      containers:
      - env:
        - name: APP_SERVICE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: APP_SERVICE_PORT
          value: "8080"
        envFrom:
        - configMapRef:
            name: common-env-jar
        image: xxxx/prod/java-testa:testa-20240924-1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 10
        name: java-testa
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          limits:
            cpu: "4"
            memory: 4Gi
          requests:
            cpu: 250m
            memory: 2Gi
        startupProbe:
          failureThreshold: 100
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 3
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
